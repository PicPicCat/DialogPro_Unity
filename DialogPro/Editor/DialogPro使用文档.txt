--------------- 对话语句 ------------------

speaker  #  say     <>    some thing   < color = blue >
讲话名称     内容   注解(空)    内容            注解 

注解的目标为上一个注解到当前的注解之间的文段，注解是非必要的可以灵活使用
注解键值对用 | 隔开 eg:  < color = red | effect = shake | stop =3.5f >
讲话名称也可以被注解

---------------- 赋值语句 ------------------

@val += 12 / *num （空格可重复不可省略）

@val :全局变量val
*num :局部变量num（当前运行的剧本）

eg:
@val = @numA / ( 20 +  *m ) + 1

------------ 标签语句（条件分支）------------

{*num == 2}
  判定条件
{
    ...（分支内容）
}

----------- 标签语句（选项分支）-------------

{*num == 2} (label content)
  判定条件      选项显示内容
{
    ...（分支内容）
}
 
判定条件可以为空:{} 表示永真
选项显示内容可以被注解,注意用英文小括号
连续出现的选项将被视为一组选项

--------------- 调用语句 ------------------

===  fun_name | name1 = value1 | name2 = value2 
     调用方法名   名称1    参数1    名称1     参数2

参数键值可以省略

--------------- 包含语句 ---------------

#++  file_name
    文件相对路径
       
------------- 宏定义语句 --------------

+==  m1    {  ...  }
   宏名称     定义内容
   
+<> 用于定义注解
+== 用于定义调用语句
+{} 用于定义条件

eg: 
+<> red4.5 {color = red | size = 4.5}
+<> / {EndRichText = 1}
speaker# The world is <red4.5>dead</>!